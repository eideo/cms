<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
    
	<description>Spring MVC启动时的配置</description>
	   
	<!-- Configures the @Controller programming model,对@ResponseBody注解返回json有影响 -->
	<mvc:annotation-driven />

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->

	<context:component-scan base-package="com.sbiao360.cms.web">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--避免IE执行AJAX时，返回JSON出现下载文件 json.MappingJackson2HttpMessageConverter  -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
 
    <mvc:resources location="/resources/" mapping="/resources/**" cache-period="31556926"/>
    <mvc:resources location="/htmlTemp/" mapping="/htmlTemp/**" cache-period="31556927"/>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

      <!-- springMVC异常处理-->
           <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
                <!-- <property name="defaultErrorView" value="error/exception"/>  表示当抛出异常但没有在exceptionMappings里面找到对应的异常时 返回名叫exception的视图-->
                <property name="statusCodes">  <!-- 定义在发生异常时视图跟返回码的对应关系 -->
                    <props>
                        <prop key="number">500</prop>  <!-- 表示在发生NumberFormatException时返回视图number，然后这里定义发生异常时视图number对应的HttpServletResponse的返回码是500 -->
                        <prop key="null">503</prop>
                    </props>
                </property>
                <property name="defaultStatusCode" value="404"/>  <!-- 表示在发生异常时默认的HttpServletResponse的返回码是多少，默认是200 -->
           </bean>

	<!-- 拦截器用来记录用户行为访问页面 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<mvc:mapping path="/*/*" />
			<mvc:exclude-mapping path="/resources/*" />
			<mvc:exclude-mapping path="/ajaxsearch" />
			<mvc:exclude-mapping path="/customerBehavior/*" />
			<bean id="custBehaviorInterceptor"
				class="com.sbiao360.cms.base.interceptor.CustomerBehaviorInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>