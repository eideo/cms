<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 设置缓存和延迟加载等等重要的运行时的行为方式 -->
	<settings>
		<!-- 这个配置使全局的映射器启用或禁用缓存。默认true -->
		<setting name="cacheEnabled" value="true" />
		<!-- 全局启用或禁用延迟加载。当禁用时, 所有关联对象都会即时加载。 -->
		<setting name="lazyLoadingEnabled" value="false" />
		<!-- 当启用时, 有延迟加载属性的对象在被调用时将会完全加载任意属性。否则, 每种属性将会按需要加载。 -->
		<setting name="aggressiveLazyLoading" value="false" />
		<!-- 允许或不允许多种结果集从一个单独的语句中返回。默认true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名。默认true -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许JDBC支持生成的键。需要适合的驱动。默认false -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- REUSE执行器重用预处理语句。BATCH执行器重用语句和批量更新 。默认SIMPLE -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 设置超时时间，它决定驱动等待一个数据库响应的时间。 -->
		<setting name="defaultStatementTimeout" value="25000" />
	</settings>

	<!-- 类型别名是为 Java 类型命名一个短的名字。 它只和 XML 配置有关, 只用来减少类完全 限定名的多余部分。 -->
	<!-- 全局别名设置，在映射文件中只需写别名，而不必写出整个类路径 -->
	<typeAliases>

	</typeAliases>

	<plugins>

		<!-- com.github.pagehelper为PageHelper类所在包名 -->
		<plugin interceptor="com.github.pagehelper.PageHelper">
			<property name="dialect" value="mysql" />
			<!-- 该参数默认为false -->
			<!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
			<!-- 和startPage中的pageNum效果一样 -->
			<property name="offsetAsPageNum" value="true" />
			<!-- 该参数默认为false -->
			<!-- 设置为true时，使用RowBounds分页会进行count查询 -->
			<property name="rowBoundsWithCount" value="true" />
			<!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
			<!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
			<property name="pageSizeZero" value="true" />
			<!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
			<!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
			<!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
			<property name="reasonable" value="true" />
		</plugin>

	</plugins>

	<environments default="development">
		<!-- environment 元素体中包含对事务管理和连接池的环境配置 -->
		<environment id="development">
			<!-- 使用JDBC类型的事务进行处理,iBatis的事务也是和JDBC一样，自动就是启动的，而Hibernate需要我们手动开启事务 -->
			<transactionManager type="JDBC">
				<property name="commitRequired" value="false" />
			</transactionManager>
			<!-- 读取*.properties文件中指定键名对应的键值，使用EL "${}" 表达式进行取值 -->
			<!-- type分三种： UNPOOLED是每次被请求时简单打开和关闭连接 UNPOOLED的数据源仅仅用来配置以下4种属性： -->
			<!-- driver，url，username，password -->
			<!-- POOLED ：JDBC连接对象的数据源连接池的实现,不直接支持第三方数据库连接池 -->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>

	<!-- 指定映射文件，映射文件要对应实体对象类，且此处指定映射文件的地址 -->
	<!-- 非注解的sql映射文件配置，如果使用mybatis注解，该mapper无需配置，但是如果mybatis注解中包含@resultMap注解，则mapper必须配置，给resultMap注解使用 -->
	<mappers>

	</mappers>

</configuration>